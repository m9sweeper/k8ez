{{- if .Values.cronJobs.enabled }}
{{- range .Values.cronJobs.scheduled }}
{{- $cronJobName := (required "Each entry in cronJobs.scheduled needs a name" .name) }}
{{- $cronJobFullName := printf "%s-%s" (include "chart.fullname" $ | trunc 40) $cronJobName }}
---
{{- if $.Capabilities.APIVersions.Has "batch/v1/CronJob" -}}
apiVersion: batch/v1
{{- else -}}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: {{ $cronJobFullName }}
  labels:  {{/*  TODO: should the app label include the cronjob name?  */}}
    {{- include "chart.basicLabels" $ | nindent 4}}
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            {{- if not $.Values.istio.enabled }}
            sidecar.istio.io/inject: "false"
            {{- end }}
            {{- if $.Values.extraAnnotations }}
            {{- toYaml $.Values.extraAnnotations | nindent 12 }}
            {{- end }}
        spec:
          {{- with $.Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          serviceAccount: {{ include "chart.fullname" $ }}
          enableServiceLinks: {{ $.Values.enableServiceLinks }}
          securityContext:
            fsGroup: {{ $.Values.podSecurityContext.fsGroup }}
          containers:
            - name: {{ .name }}
              image: {{ include "chart.buildImagePath" (dict "image" .image "values" $.Values ) | quote }}
              {{- if and .image (kindIs "map" .image) }}
              {{/* commented out: - if and .image (default dict .image).pullPolicy */}}
              imagePullPolicy: {{ .image.pullPolicy }}
              {{- else }}
              imagePullPolicy: {{ $.Values.image.pullPolicy }}
              {{- end }}
              securityContext:
                {{- toYaml (merge dict $.Values.securityContext (or .securityContext dict)) | nindent 16}}

              {{- if .command }}
              command: [{{ .command | quote }}]
              {{- end }}

              {{- if .args }}
              args:
                {{- toYaml .args | nindent 14 }}
              {{- end }}

              {{- if .env }}
              env:
              {{- range $k, $v := .env }}
              - name: {{ $k | quote}}
                value: {{ $v | quote }}
              {{- end }}
              {{- end }}

              {{- if or $.Values.configData $.Values.secretData}}
              envFrom:
              {{- if $.Values.configData }}
              - configMapRef:
                  name: {{ include "chart.fullname" $ }}
              {{- end }}
              {{- if $.Values.secretData }}
              - secretRef:
                  name: {{ include "chart.fullname" $ }}
              {{- end }}
              {{- end }}

              {{- with .volumeMounts }}
              volumeMounts:
                {{- toYaml . | nindent 14 }}
              {{- end }}

              {{- if .resources}}
              resources:
                {{- toYaml .resources | nindent 16 }}
              {{- else }}
              {{- with $.Values.resources }}
              resources:
                {{- toYaml . | nindent 16 }}
              {{- end }}
              {{- end }}

          restartPolicy: {{ or .restartPolicy "Never" }}

          {{- if .volumes }}
          volumes:
          {{- toYaml .volumes | nindent 10 }}
          {{- end }}

  schedule: {{ .schedule | quote }}

{{- end }}
{{- end }}
