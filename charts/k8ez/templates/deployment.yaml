{{- if .Values.deployment.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
    chart: {{ include "chart.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    version: {{ .Chart.Version }}
spec:
  replicas: {{ ternary .Values.autoscale.maxPods .Values.replicaCount .Values.autoscale.enabled }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/{{ include "chart.fullname" . }}-configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/{{ include "chart.fullname" . }}-secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
{{- if not .Values.istio.enabled }}
        sidecar.istio.io/inject: "false"
{{- end }}
{{- if .Values.extraAnnotations }}
{{ toYaml .Values.extraAnnotations | indent 8 }}
{{- end }}
      labels:
        app: {{ .Release.Name }}
        chart: {{ include "chart.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        version: {{ .Chart.Version }}
    spec:
{{ if .Values.imagePullSecrets }}
{{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml . | nindent 8 }}
{{- end }}
{{- end }}
      serviceAccount: {{ .Release.Name }}
      enableServiceLinks: {{ .Values.enableServiceLinks }}
      securityContext:
        fsGroup: {{ .Values.podSecurityContext.fsGroup }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - {{ .Release.Name }}
                  - key: release
                    operator: In
                    values:
                    - {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname
      containers:
        - name: "{{ .Release.Name }}"
          image: "{{ .Values.image.image }}"
          securityContext: 
{{ toYaml .Values.securityContext | indent 12}}
{{ if .Values.deployment.command }}
          command: [{{ .Values.deployment.command | quote }}]
{{- end }}
{{ if .Values.deployment.args }}
          args: 
{{ toYaml .Values.deployment.args | indent 10 }}
{{- end }}
          envFrom:
{{ if .Values.configData }}
          - configMapRef:
              name: {{ .Release.Name }}
{{- end }}
{{ if .Values.secretData }}
          - secretRef:
              name: {{ .Release.Name }}
{{- end }}
          ports:
            - containerPort: {{ .Values.service.port }}
{{- with .Values.livenessProbe }}
          livenessProbe:
{{ toYaml . | indent 12 }}
{{- end }}
{{- with .Values.readinessProbe }}
          readinessProbe:
{{ toYaml . | indent 12 }}
{{- end }}
{{- if .Values.volumeMounts }}
          volumeMounts:
{{ toYaml .Values.volumeMounts | indent 12 }}
{{- end }}
{{ if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- end }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}

{{- if .Values.volumes }}
      volumes:
{{ toYaml .Values.volumes | indent 6 }}
{{- end }}

{{- end }}
